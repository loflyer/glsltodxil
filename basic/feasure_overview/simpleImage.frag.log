
##########################################################################################GLSL
#version 450 core
in vec4 coord;
in flat ivec4 icoord;

layout(location = 0) out vec4 color;

layout(r32f) uniform imageBuffer img7[2];  // imageBuffer纹理
layout(rgba32f) uniform image2DRect img8; // 2D 的纹理坐标


void main()
{

  color = imageLoad(img8, icoord.zw);
  imageStore(img8, icoord.xy, coord);

  imageStore(img7[1], icoord.x, coord);
}
##########################################################################################GLSL


##########################################################################################DXIL 
%dx.types.Handle = type { i8* }
%dx.types.ResRet.f32 = type { float, float, float, float, i32 }
%"class.RWBuffer<vector<float, 4> >" = type { <4 x float> }
%"class.RWTexture2D<vector<float, 4> >" = type { <4 x float> }
 
; Function Attrs: nounwind readonly
declare %dx.types.Handle @dx.op.createHandle(i32, i8, i32, i32, i1) #0
 
; Function Attrs: nounwind readnone
declare i32 @dx.op.loadInput.i32(i32, i32, i32, i8, i32) #1
 
; Function Attrs: nounwind readonly
declare %dx.types.ResRet.f32 @dx.op.textureLoad.f32(i32, %dx.types.Handle, i32, i32, i32, i32, i32, i32, i32) #0
 
; Function Attrs: nounwind readnone
declare float @dx.op.loadInput.f32(i32, i32, i32, i8, i32) #1
 
; Function Attrs: nounwind
declare void @dx.op.textureStore.f32(i32, %dx.types.Handle, i32, i32, i32, float, float, float, float, i8) #2
 
; Function Attrs: nounwind
declare void @dx.op.bufferStore.f32(i32, %dx.types.Handle, i32, i32, float, float, float, float, i8) #2
 
; Function Attrs: nounwind
declare void @dx.op.storeOutput.f32(i32, i32, i32, i8, float) #2
 
define void @main() {
  %1 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 1, i32 0, i32 0, i1 false)
  %2 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 1, i32 0, i32 1, i1 false)
  %3 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 1, i32 1, i32 2, i1 false)
  %4 = call i32 @dx.op.loadInput.i32(i32 4, i32 0, i32 0, i8 0, i32 undef)
  %5 = call i32 @dx.op.loadInput.i32(i32 4, i32 0, i32 0, i8 1, i32 undef)
  %6 = call i32 @dx.op.loadInput.i32(i32 4, i32 0, i32 0, i8 2, i32 undef)
  %7 = call i32 @dx.op.loadInput.i32(i32 4, i32 0, i32 0, i8 3, i32 undef)
  %8 = call %dx.types.ResRet.f32 @dx.op.textureLoad.f32(i32 66, %dx.types.Handle %3, i32 undef, i32 %6, i32 %7, i32 0, i32 undef, i32 undef, i32 undef)
  %9 = extractvalue %dx.types.ResRet.f32 %8, 0
  %10 = extractvalue %dx.types.ResRet.f32 %8, 1
  %11 = extractvalue %dx.types.ResRet.f32 %8, 2
  %12 = extractvalue %dx.types.ResRet.f32 %8, 3
  %13 = call float @dx.op.loadInput.f32(i32 4, i32 1, i32 0, i8 0, i32 undef)
  %14 = call float @dx.op.loadInput.f32(i32 4, i32 1, i32 0, i8 1, i32 undef)
  %15 = call float @dx.op.loadInput.f32(i32 4, i32 1, i32 0, i8 2, i32 undef)
  %16 = call float @dx.op.loadInput.f32(i32 4, i32 1, i32 0, i8 3, i32 undef)
  call void @dx.op.textureStore.f32(i32 67, %dx.types.Handle %3, i32 %4, i32 %5, i32 0, float %13, float %14, float %15, float %16, i8 15)
  call void @dx.op.bufferStore.f32(i32 69, %dx.types.Handle %2, i32 %4, i32 undef, float %13, float %14, float %15, float %16, i8 1)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 0, float %9)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 1, float %10)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 2, float %11)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 3, float %12)
  ret void
}
 
attributes #0 = { nounwind readonly }
attributes #1 = { nounwind readnone }
attributes #2 = { nounwind }
 
!llvm.ident = !{!0}
!dx.version = !{!1}
!dx.valver = !{!2}
!dx.shaderModel = !{!3}
!dx.resources = !{!4}
!dx.typeAnnotations = !{!9}
!dx.entryPoints = !{!13}
!dx.source.contents = !{!23, !24, !25, !26, !27, !28, !29, !30}
!dx.vk.xfb = !{}
 
!0 = !{!"Mesa version 22.04@release"}
!1 = !{i32 1, i32 1}
!2 = !{i32 1, i32 4}
!3 = !{!"ps", i32 6, i32 1}
!4 = !{null, !5, null, null}

; UAV 资源
!5 = !{!6, !8}
!6 = !{i32 0, %"class.RWBuffer<vector<float, 4> >"* undef, !"img7", i32 0, i32 0, i32 2, i32 10, i1 false, i1 false, i1 false, !7}
!7 = !{i32 0, i32 9}
!8 = !{i32 1, %"class.RWTexture2D<vector<float, 4> >"* undef, !"img8", i32 0, i32 2, i32 1, i32 2, i1 false, i1 false, i1 false, !7}
!9 = !{i32 1, void ()* @main, !10}
!10 = !{!11}
!11 = !{i32 0, !12, !12}
!12 = !{}
!13 = !{void ()* @main, !"main", !14, !4, !22}
!14 = !{!15, !20, null}
!15 = !{!16, !18}
!16 = !{i32 0, !"TEXCOORD", i8 4, i8 0, !17, i8 1, i32 1, i8 4, i32 0, i8 0, !12}
!17 = !{i32 0}
!18 = !{i32 1, !"TEXCOORD", i8 9, i8 0, !19, i8 2, i32 1, i8 4, i32 1, i8 0, !12}
!19 = !{i32 1}
!20 = !{!21}
!21 = !{i32 0, !"SV_Target", i8 9, i8 16, !17, i8 0, i32 1, i8 4, i32 0, i8 0, !12}
!22 = !{i32 0, i64 1048576}
!23 = !{!"num_images", i32 3}
!24 = !{!"num_ssbos", i32 0}
!25 = !{!"float_controls_execution_mode", i32 0}
!26 = !{!"color_dual_source", i32 0}
!27 = !{!"origin_upper_left", i32 0}
!28 = !{!"pixel_center_integer", i32 0}
!29 = !{!"early_fragment_tests", i32 0}
!30 = !{!"post_depth_coverage", i32 0}
##########################################################################################DXIL 



#version 400

#extension GL_ARB_shader_subroutine : require

subroutine int ExampleSubroutineType(int example_argument);

uniform int data_i;

out int outdata;


subroutine(ExampleSubroutineType) int subroutine1(int example_argument)
{
    outdata = 1+ data_i;
    return 1 + data_i;
}

subroutine(ExampleSubroutineType) int subroutine2(int example_argument)
{
    outdata = 2 * data_i;
    return 2 * data_i;
}

subroutine uniform ExampleSubroutineType data_provider;

void main()
{
    gl_Position = vec4(float(data_provider(0)), vec3(1) );
}
























%dx.types.Handle = type { i8* }
%dx.types.CBufRet.i32 = type { i32, i32, i32, i32 }
%__ubo0 = type { [4 x float] }

; Function Attrs: nounwind readonly
declare %dx.types.Handle @dx.op.createHandle(i32, i8, i32, i32, i1) #0

; Function Attrs: nounwind readonly
declare %dx.types.CBufRet.i32 @dx.extop.cbufferLoadLegacy.i32(i32, %dx.types.Handle, i32) #0

; Function Attrs: nounwind
declare void @dx.op.storeOutput.f32(i32, i32, i32, i8, float) #1

; Function Attrs: nounwind
declare void @dx.op.storeOutput.i32(i32, i32, i32, i8, i32) #1

define void @main() {
  %1 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 2, i32 0, i32 0, i1 false)
  %2 = call %dx.types.CBufRet.i32 @dx.extop.cbufferLoadLegacy.i32(i32 275, %dx.types.Handle %1, i32 1)
  %3 = extractvalue %dx.types.CBufRet.i32 %2, 0
  %4 = extractvalue %dx.types.CBufRet.i32 %2, 1
  %5 = extractvalue %dx.types.CBufRet.i32 %2, 2
  %6 = extractvalue %dx.types.CBufRet.i32 %2, 3
  %7 = icmp eq i32 %3, 0
  %8 = call %dx.types.CBufRet.i32 @dx.extop.cbufferLoadLegacy.i32(i32 275, %dx.types.Handle %1, i32 0)
  %9 = extractvalue %dx.types.CBufRet.i32 %8, 0
  %10 = extractvalue %dx.types.CBufRet.i32 %8, 1
  %11 = extractvalue %dx.types.CBufRet.i32 %8, 2
  %12 = extractvalue %dx.types.CBufRet.i32 %8, 3
  %13 = add i32 1, %9
  %14 = shl i32 %9, 1
  %15 = select i1 %7, i32 %13, i32 %14
  %16 = sitofp i32 %15 to float
  %17 = bitcast i32 1065353216 to float
  %18 = bitcast i32 1065353216 to float
  %19 = bitcast i32 1065353216 to float
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 0, float %16)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 1, float %17)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 2, float %18)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 3, float %19)
  call void @dx.op.storeOutput.i32(i32 5, i32 1, i32 0, i8 0, i32 %15)
  ret void
}

attributes #0 = { nounwind readonly }
attributes #1 = { nounwind }

!llvm.ident = !{!0}
!dx.version = !{!1}
!dx.valver = !{!2}
!dx.shaderModel = !{!3}
!dx.resources = !{!4}
!dx.typeAnnotations = !{!7}
!dx.entryPoints = !{!11}
!dx.source.contents = !{!18, !19, !20}
!dx.vk.xfb = !{}

!0 = !{!"Mesa version 22.04@release"}
!1 = !{i32 1, i32 1}
!2 = !{i32 1, i32 4}
!3 = !{!"vs", i32 6, i32 1}
!4 = !{null, null, !5, null}
!5 = !{!6}

!6 = !{i32 0, %__ubo0* undef, !"__ubo0", i32 0, i32 0, i32 1, i32 16, null}


!7 = !{i32 1, void ()* @main, !8}
!8 = !{!9}
!9 = !{i32 0, !10, !10}
!10 = !{}
!11 = !{void ()* @main, !"main", !12, !4, !17}
!12 = !{null, !13, null}
!13 = !{!14, !16}
!14 = !{i32 0, !"SV_Position", i8 9, i8 3, !15, i8 4, i32 1, i8 4, i32 0, i8 0, !10}
!15 = !{i32 0}
!16 = !{i32 1, !"TEXCOORD", i8 4, i8 0, !15, i8 2, i32 1, i8 1, i32 1, i8 0, !10}
!17 = !{i32 0, i64 1048576}
!18 = !{!"num_images", i32 0}
!19 = !{!"num_ssbos", i32 0}
!20 = !{!"float_controls_execution_mode", i32 0}